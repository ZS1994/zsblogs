<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zs.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.zs.entity.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="pids" property="pids" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, introduction, pids
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zs.entity.Role" >
    insert into role (id, name, introduction, 
      pids)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, 
      #{pids,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zs.entity.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="pids != null" >
        pids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="pids != null" >
        #{pids,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zs.entity.Role" >
    update role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="pids != null" >
        pids = #{pids,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zs.entity.Role" >
    update role
    set name = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      pids = #{pids,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByIds" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from role
    where id in (${rids})
  </select>
  
  <select id="queryFenye" resultMap="BaseResultMap" parameterType="com.zs.entity.other.EasyUIAccept">
  	select * from role
  	<where>
  		<if test="str1!=null"><!-- str1:名字 -->
  		and name like '%${str1}%'
  		</if>
  		<if test="str2!=null"><!-- str2:介绍 -->
  		and introduction like '%${str2}%'
  		</if>
  	</where>
  	<if test="sort!=null and order!=null">
  		order by ${sort} ${order}
  	</if>
  	limit ${start},${rows}
  </select>
  <select id="getCount" resultType="int" parameterType="com.zs.entity.other.EasyUIAccept">
  	select count(*) from role
  	<where>
  		<if test="str1!=null"><!-- str1:名字 -->
  		and name like '%${str1}%'
  		</if>
  		<if test="str2!=null"><!-- str2:介绍 -->
  		and introduction like '%${str2}%'
  		</if>
  	</where>
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
  	select * from role
  </select>
</mapper>