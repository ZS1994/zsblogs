<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zs.dao.BlogListMapper">
    <resultMap id="BaseResultMap" type="com.zs.entity.BlogList">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="bl_order" property="blOrder" jdbcType="INTEGER"/>
        <result column="u_id" property="uId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , name, create_time, bl_order, u_id
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from blog_list
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from blog_list
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.zs.entity.BlogList">
        insert into blog_list (id, name, create_time,
                               bl_order, u_id)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
                #{blOrder,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.zs.entity.BlogList" useGeneratedKeys="true" keyProperty="id">
        insert into blog_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="blOrder != null">
                bl_order,
            </if>
            <if test="uId != null">
                u_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blOrder != null">
                #{blOrder,jdbcType=INTEGER},
            </if>
            <if test="uId != null">
                #{uId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zs.entity.BlogList">
        update blog_list
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blOrder != null">
                bl_order = #{blOrder,jdbcType=INTEGER},
            </if>
            <if test="uId != null">
                u_id = #{uId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zs.entity.BlogList">
        update blog_list
        set name        = #{name,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            bl_order    = #{blOrder,jdbcType=INTEGER},
            u_id        = #{uId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="queryFenye" resultMap="BaseResultMap" parameterType="com.zs.entity.other.EasyUIAccept">
        select
        <include refid="Base_Column_List"/>
        from blog_list
        <where>
            <if test="int1!=null">
                and u_id=#{int1}
            </if>
            <if test="int2!=null">
                and id=#{int2}
            </if>
            <if test="str1!=null">
                and name like '${str1}%'
            </if>
            <if test="date1!=null"><!-- date1：时间范围开始时间 -->
                and create_time >= #{date1}
            </if>
            <if test="date2!=null"><!-- date2：时间范围结束时间 -->
                and create_time &lt;= #{date2}
            </if>
        </where>
        <if test="sort!=null and order!=null">
            order by ${sort} ${order}
        </if>
        limit ${start},${rows}
    </select>
    <select id="getCount" resultType="int" parameterType="com.zs.entity.other.EasyUIAccept">
        select count(id) from blog_list
        <where>
            <if test="int1!=null">
                and u_id=#{int1}
            </if>
            <if test="int2!=null">
                and id=#{int2}
            </if>
            <if test="str1!=null">
                and name like '${str1}%'
            </if>
            <if test="date1!=null"><!-- date1：时间范围开始时间 -->
                and create_time >= #{date1}
            </if>
            <if test="date2!=null"><!-- date2：时间范围结束时间 -->
                and create_time &lt;= #{date2}
            </if>
        </where>
    </select>
    <select id="queryAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog_list
        where u_id=#{uid}
    </select>

    <delete id="deleteBlogsOfDeleteBloglist" parameterType="java.lang.Integer">
        delete
        from blog_list_rel
        where bl_id = #{blId}
    </delete>
</mapper>