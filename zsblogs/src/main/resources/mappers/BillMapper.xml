<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zs.dao.BillMapper">
  <resultMap id="BaseResultMap" type="com.zs.entity.Bill">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="people" jdbcType="VARCHAR" property="people" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="rel_id" jdbcType="INTEGER" property="relId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, time, people, money, type, rel_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bill
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bill
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zs.entity.Bill">
    insert into bill (id, time, people, 
      money, type, rel_id)
    values (#{id,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{people,jdbcType=VARCHAR}, 
      #{money,jdbcType=DOUBLE}, #{type,jdbcType=VARCHAR}, #{relId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zs.entity.Bill">
    insert into bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="people != null">
        people,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="relId != null">
        rel_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="people != null">
        #{people,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="relId != null">
        #{relId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zs.entity.Bill">
    update bill
    <set>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="people != null">
        people = #{people,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="relId != null">
        rel_id = #{relId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zs.entity.Bill">
    update bill
    set time = #{time,jdbcType=TIMESTAMP},
      people = #{people,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      type = #{type,jdbcType=VARCHAR},
      rel_id = #{relId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryFenye" resultMap="BaseResultMap" parameterType="com.zs.entity.other.EasyUIAccept">
  	select 
  	<include refid="Base_Column_List" />
  	from bill
  	<where>
  		<if test="date1 != null"><!-- date1:交易时间开始 -->
	  		and time >= #{date1}
  		</if>
  		<if test="date2 != null"><!-- date2:交易时间结束 -->
  			and time &lt;= #{date2}
  		</if>
  		<if test="str1 != null"><!-- str1:顾客 -->
  			and people like '%${str1}%'
  		</if>
  		<if test="str2 != null"><!-- str2:类型 -->
  			and type = #{str2}
  		</if>
        <if test="str3 != null"><!-- str3:账单编号 -->
            and id = #{str3}
        </if>
        <if test="str4 != null"><!-- str4:关联单编号 -->
            and rel_id = #{str4}
        </if>
        <if test="int1 == 1"><!-- int1:只查交易单产生的，即type=交易、还款 -->
            and (type = '交易' or type='还款')
        </if>
  	</where>
  	<if test="sort!=null and order!=null">
  		order by ${sort} ${order}
  	</if>
  	<if test="sort==null and order==null">
  		order by time desc
  	</if>
  	limit ${start},${rows}
  </select>
  <select id="getCount" resultType="int" parameterType="com.zs.entity.other.EasyUIAccept">
  	select count(0) from bill
  	<where>
  		<if test="date1 != null"><!-- date1:交易时间开始 -->
	  		and time >= #{date1}
  		</if>
  		<if test="date2 != null"><!-- date2:交易时间结束 -->
  			and time &lt;= #{date2}
  		</if>
  		<if test="str1 != null"><!-- str1:顾客 -->
  			and people like '%${str1}%'
  		</if>
  		<if test="str2 != null"><!-- str2:类型 -->
  			and type = #{str2}
  		</if>
        <if test="str3 != null"><!-- str3:账单编号 -->
            and id = #{str3}
        </if>
        <if test="str4 != null"><!-- str4:关联单编号 -->
            and rel_id = #{str4}
        </if>
        <if test="int1 == 1"><!-- int1:只查交易单产生的，即type=交易、还款 -->
            and (type = '交易' or type='还款')
        </if>
  	</where>
  </select>
  
    <delete id="deleteByTraId">
        delete from bill
        where
          (type = '交易' or type = '还款')
          and rel_id = #{traId}
    </delete>
</mapper>