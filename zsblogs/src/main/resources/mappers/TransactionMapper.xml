<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zs.dao.TransactionMapper">
  <resultMap id="BaseResultMap" type="com.zs.entity.Transaction">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="customer" jdbcType="VARCHAR" property="customer" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    id, time, customer, state, note
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transaction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from transaction
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zs.entity.Transaction">
    insert into transaction (id, time, customer, 
      state, note)
    values (#{id,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{customer,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.zs.entity.Transaction">
    insert into transaction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="customer != null">
        customer,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="customer != null">
        #{customer,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zs.entity.Transaction">
    update transaction
    <set>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="customer != null">
        customer = #{customer,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zs.entity.Transaction">
    update transaction
    set time = #{time,jdbcType=TIMESTAMP},
      customer = #{customer,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryFenye" resultMap="BaseResultMap" parameterType="com.zs.entity.other.EasyUIAccept">
  	select 
  	<include refid="Base_Column_List" />
  	from transaction
  	<where>
  		<if test="date1 != null"><!-- date1:交易时间开始 -->
	  		and time >= #{date1}
  		</if>
  		<if test="date2 != null"><!-- date2:交易时间结束 -->
  			and time &lt;= #{date2}
  		</if>
  		<if test="str1 != null"><!-- str1:顾客 -->
  			and customer like '%${str1}%'
  		</if>
  		<if test="str2 != null"><!-- str2:状态 -->
  			and state = #{str2}
  		</if>
  	</where>
  	<if test="sort!=null and order!=null">
  		order by ${sort} ${order}
  	</if>
  	<if test="sort==null and order==null">
  		order by time desc
  	</if>
  	limit ${start},${rows}
  </select>
  <select id="getCount" resultType="int" parameterType="com.zs.entity.other.EasyUIAccept">
  	select count(0) from transaction
  	<where>
  		<if test="date1 != null"><!-- date1:交易时间开始 -->
	  		and time >= #{date1}
  		</if>
  		<if test="date2 != null"><!-- date2:交易时间结束 -->
  			and time &lt;= #{date2}
  		</if>
  		<if test="str1 != null"><!-- str1:顾客 -->
  			and customer like '%${str1}%'
  		</if>
  		<if test="str2 != null"><!-- str2:状态 -->
  			and state = #{str2}
  		</if>
  	</where>
  </select>
  
  
  
</mapper>