<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zs.dao.TimelineMapper" >
  <resultMap id="BaseResultMap" type="com.zs.entity.Timeline" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="p_id" property="pId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zs.entity.Timeline" extends="BaseResultMap" >
    <result column="info" property="info" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, u_id, p_id, create_time
  </sql>
  <sql id="Blob_Column_List" >
    info
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from timeline
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from timeline
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zs.entity.Timeline" >
    insert into timeline (id, u_id, p_id, 
      create_time, info)
    values (#{id,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER}, #{pId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{info,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zs.entity.Timeline" >
    insert into timeline
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uId != null" >
        u_id,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="info != null" >
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uId != null" >
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="info != null" >
        #{info,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zs.entity.Timeline" >
    update timeline
    <set >
      <if test="uId != null" >
        u_id = #{uId,jdbcType=INTEGER},
      </if>
      <if test="pId != null" >
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zs.entity.Timeline" >
    update timeline
    set u_id = #{uId,jdbcType=INTEGER},
      p_id = #{pId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      info = #{info,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zs.entity.Timeline" >
    update timeline
    set u_id = #{uId,jdbcType=INTEGER},
      p_id = #{pId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryFenye" resultMap="BaseResultMap" parameterType="com.zs.entity.other.EasyUIAccept">
  	select 
  	<include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
  	from timeline
  	<where>
  		<if test="date1!=null"><!-- date1:创建时间开始 -->
	  		and create_time >= #{date1}
  		</if>
  		<if test="date2!=null"><!-- date1:创建时间结束 -->
  			and create_time &lt;= #{date2}
  		</if>
  		<if test="str1!=null"><!-- str1:用户名字 -->
  			and u_id in (select id from users where name like '${str1}%')
  		</if>
  		<if test="str2!=null"><!-- str2:操作项名字 -->
  			and p_id in (select id from permission where name like '${str2}%')
  		</if>
  		<if test="int1!=null and int1!=0"><!-- int1:去除操作日志部分 -->
  			and p_id not in (56,57,58,59,60,61)
  		</if>
  		<if test="int2!=null"><!-- int2:用户id -->
  			and u_id = #{int2}
  		</if>
  		<if test="int3!=null"><!-- int3:操作项id -->
  			and p_id = #{int3}
  		</if>
  	</where>
  	<if test="sort!=null and order!=null">
  		order by ${sort} ${order}
  	</if>
  	<if test="sort==null or order==null">
  		order by create_time desc
  	</if>
  	limit ${start},${rows}
  </select>
  <select id="getCount" resultType="int" parameterType="com.zs.entity.other.EasyUIAccept">
  	select count(id) from timeline
  	<where>
  		<if test="date1!=null"><!-- date1:创建时间开始 -->
	  		and create_time >= #{date1}
  		</if>
  		<if test="date2!=null"><!-- date1:创建时间结束 -->
  			and create_time &lt;= #{date2}
  		</if>
  		<if test="str1!=null"><!-- str1:用户名字 -->
  			and u_id in (select id from users where name like '${str1}%')
  		</if>
  		<if test="str2!=null"><!-- str2:操作项名字 -->
  			and p_id in (select id from permission where name like '${str2}%')
  		</if>
  		<if test="int1!=null and int1!=0"><!-- int1:去除操作日志部分 -->
  			and p_id not in (56,57,58,59,60,61)
  		</if>
  		<if test="int2!=null"><!-- int2:用户id -->
  			and u_id = #{int2}
  		</if>
  		<if test="int3!=null"><!-- int3:操作项id -->
  			and p_id = #{int3}
  		</if>
  	</where>
  </select>
  
</mapper>