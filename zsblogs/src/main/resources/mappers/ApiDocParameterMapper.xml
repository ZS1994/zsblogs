<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zs.dao.ApiDocParameterMapper" >
  <resultMap id="BaseResultMap" type="com.zs.entity.ApiDocParameter" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ad_id" property="adId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="isMust" property="ismust" jdbcType="INTEGER" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="eg" property="eg" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ad_id, name, type, isMust, introduce, eg
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from api_doc_parameter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from api_doc_parameter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zs.entity.ApiDocParameter" >
    insert into api_doc_parameter (id, ad_id, name, 
      type, isMust, introduce, 
      eg)
    values (#{id,jdbcType=INTEGER}, #{adId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{ismust,jdbcType=INTEGER}, #{introduce,jdbcType=VARCHAR}, 
      #{eg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zs.entity.ApiDocParameter" >
    insert into api_doc_parameter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="adId != null" >
        ad_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="ismust != null" >
        isMust,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="eg != null" >
        eg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="adId != null" >
        #{adId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="ismust != null" >
        #{ismust,jdbcType=INTEGER},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="eg != null" >
        #{eg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zs.entity.ApiDocParameter" >
    update api_doc_parameter
    <set >
      <if test="adId != null" >
        ad_id = #{adId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="ismust != null" >
        isMust = #{ismust,jdbcType=INTEGER},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="eg != null" >
        eg = #{eg,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zs.entity.ApiDocParameter" >
    update api_doc_parameter
    set ad_id = #{adId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      isMust = #{ismust,jdbcType=INTEGER},
      introduce = #{introduce,jdbcType=VARCHAR},
      eg = #{eg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>